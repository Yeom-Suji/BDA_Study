# 2장 NumPy 소개

  1) 파이썬의 데이터의 타입 이해하기
      파이썬 정수는 정수 이상이다
        - 데이터 타입 동적 추론
      파이썬 리스트는 리스트 이상이다
        - 동적 타이핑으로 서로다른 데이터 타입 요소를 담는 리스트 생성 가능 but. 그래서 데이터양 엄청 커짐
      파이썬의 고정 타입 배열
        - 내장 array 모듈
      파이썬 리스트에서 배열 만들기
        - np.array() 을 사용해 배열 만들기 -> NumPy는 반드시 모든 요소가 같은 타입이어야함
        - 명시적으로 데이터 타입 설정은 dtype
          ex. np.arrary([1,2,3,4], dtype = 'float32')
      처음부터 배열 만들기
        - 내장된 루틴 사용하기 +) pg 44
      NumPy 표준 데이터 타입
  
  2) NumPy 배열의 기초
      NumPy 배열 속성 지정: 배열의 크기, 모양, 메모리 소비량, 테이터 타입을 결정한다
      배열 인덱싱: 단일 요소에 접근하기
        - a[0], a[-1], 다차원 배열에서는 인덱스 튜플 a[2,0] -> 인덱스 표기법으로 값을 수정할 수도 있음
          ******NumPy 배열은 고정타입!!!!!!!!! 정수 배열에 부동 소수점 값을 삽입하려고 하면 자동으로 잘라버림.
      배열 슬라이싱: 하위 배열에 접근하기
        - 1차원 하위배열: a[::2] 하나 걸러 하나씩, a[1::2] 인덱스 1부터 시작해 하나 걸러 하나씩
        - 다차원 하위배열: a[:2, :3] 두개의 , 3개의 열
        - 사본이 아닌 뷰로서의 하위 배열: 원래의 배열이 변경되기 때문에 사본의 필요성
        - 배열의 사본 만들기: copy()
      배열 재구조화
        - reshape, newaxis
      배열 연결 및 분할
        - 배열 연결
            np.concatenate([x,y]) -> 배열의 합 [x,y,z]도 가능
            np.vstack -> 혼합된 차원의 수직 스택, 위에 얹음
            np.hstack -> 혼합된 차원의 수평 스택, 옆에 끼워 넣음
        - 배열 분할
            np.split(x, [3, 5]) -> 3, 5는 분할 지점
            np.hsplit() -> 위에서 행단위로 분할
            np.vsplit -> 옆에서 열단위로 분할
  
  3) NumPy 배열 연산: 유니버설 함수
      루프는 느리다
      Ufuncs 소개
      NumPy 유니버설 함수(Ufuncs)
      고급 Ufuncs 기능
      Ufuncs: 더 알아보기
  
  4) 집계: 최솟값, 최댓값, 그리고 그사이의 모든 것
      배열의 값의 합 구하기
      최솟값과 최댓값
      예제: 미국 대통령의 평균 신장은 얼마일까?
