~70P 정리.

동적 타이핑 -> 데이터 타입을 동적으로 추론 함. 모든 변수에 어떤 데이터든 할당 가능. 

# 고정 타입 배열 ->  import array. 배열하는 내장 함수. 

표준 데이터 타입 핵심. 

Bool - > 참 or 거짓
Int - > 정수
int8 – 바이트
Int16 – 정수. 2의 16제곱?
Float – 소수

배열 인덱싱 - i번째에 접근하려면 리스트와 동일하게 [] 안에 인덱스를 지정하면 된다. 끝에서 지정하려면 -1 지정. 
다차원에서는 [0,0] 지정할 것. 
##numpy 배열 -> 고정 타입을 가진다. 소수점 밑에는 버린다는 뜻. (49p)
x [:5], [5:], [5:7] …
다차원 하위배열 – [:2,:3] - 2개의 행, 3개의 열 출력. 

배열의 사본 만들기 – copy() -> 수정해도 원래 배열이 유지됨. (바뀌지 않음)
Reshape – 배열의 형상을 변경함. (3,3) – 3열,3행

numpy 배열 연산 – 유니버설 함수. 1차원/ 다차원 배열에서도 동작함. 

배열 산술 연산

유니버설 함수는 기본 산술 연산자 사용. +-*/ 다 사용 가능하다. 
60p 넘파이 데이터 타입 정리. 

절댓값 – np.absolute, np.abs

지수, 로그 – np.exp, np.log

집계 – min, max, 그 사이의 모든 것. 
더하기 – np.sum
간단한 계산은 똑같지만, 컴파일된 코드에서는 np.sum이 더 빠르다. 

다차원 집계 – np.random.random((3,4)) -> 랜덤으로 3행, 4열 데이터 출력. 
축 지정 – axis. 최솟값 – axis = 0 지정. (각 행에서 최솟값)
	       최댓값  - axis =1 지정. 

Numpy 집계함수 정리. 
Np.prod – 곱계산
Np.mean – 평균 계산.
Np.std, var, - 표준편차, 분산
Np.argmin – 최솟값의 인덱스
Np.argmax – 최댓값의 인덱스. 
Np.median –요소의 중간값.
Np.percentile – 요소의 순위 기반하여 백분위 계산.
Np.any – 요소 중 참이 있는지 검사. 
